#pragma once
#include "MaterialWorldObject.h"
#include "classes/Texture.h"
#include "Mesh.h"

static float cube_mesh[] = {
	//   X       Y       Z           R       G       B       A			 Nx	      Ny       Nz          S       T
	// Передняя грань (z: +1)
	    1.0f,   1.0f,   1.0f,       1.0f,   1.0f,   1.0f,   1.0f,	    0.0f,    0.0f,    1.0f,       1.0f,   1.0f,  // верхний правый
	   -1.0f,   1.0f,   1.0f,       0.0f,   1.0f,   1.0f,   1.0f,	    0.0f,    0.0f,    1.0f,       0.0f,   1.0f,  // верхний левый
	   -1.0f,  -1.0f,   1.0f,       1.0f,   0.0f,   1.0f,   1.0f,	    0.0f,    0.0f,    1.0f,       0.0f,   0.0f,  // нижний левый
	    1.0f,  -1.0f,   1.0f,       0.5f,   0.5f,   0.5f,   1.0f,	    0.0f,    0.0f,    1.0f,       1.0f,   0.0f,  // нижний правый
	// Правая грань (x: +1)											    
		1.0f,   1.0f,  -1.0f,       1.0f,   1.0f,   1.0f,   1.0f,	    1.0f,    0.0f,    0.0f,       1.0f,   1.0f,  // верхний правый
		1.0f,   1.0f,   1.0f,       0.0f,   1.0f,   1.0f,   1.0f,	    1.0f,    0.0f,    0.0f,       0.0f,   1.0f,  // верхний левый
		1.0f,  -1.0f,   1.0f,       1.0f,   0.0f,   1.0f,   1.0f,	    1.0f,    0.0f,    0.0f,       0.0f,   0.0f,  // нижний левый
		1.0f,  -1.0f,  -1.0f,       0.5f,   0.5f,   0.5f,   1.0f,	    1.0f,    0.0f,    0.0f,       1.0f,   0.0f,  // нижний правый
	// Верхняя грань (y: +1)										   
		1.0f,   1.0f,  -1.0f,       1.0f,   1.0f,   1.0f,   1.0f,	    0.0f,    1.0f,    0.0f,       1.0f,   1.0f,  // верхний правый
	   -1.0f,   1.0f,  -1.0f,       0.0f,   1.0f,   1.0f,   1.0f,	    0.0f,    1.0f,    0.0f,       0.0f,   1.0f,  // верхний левый
	   -1.0f,   1.0f,   1.0f,       1.0f,   0.0f,   1.0f,   1.0f,	    0.0f,    1.0f,    0.0f,       0.0f,   0.0f,  // нижний левый
		1.0f,   1.0f,   1.0f,       0.5f,   0.5f,   0.5f,   1.0f,	    0.0f,    1.0f,    0.0f,       1.0f,   0.0f,  // нижний правый
	// Левая грань (x: -1)											    
	   -1.0f,   1.0f,   1.0f,       1.0f,   1.0f,   1.0f,   1.0f,	   -1.0f,    0.0f,    0.0f,       1.0f,   1.0f,  // верхний правый
	   -1.0f,   1.0f,  -1.0f,       0.0f,   1.0f,   1.0f,   1.0f,	   -1.0f,    0.0f,    0.0f,       0.0f,   1.0f,  // верхний левый
	   -1.0f,  -1.0f,  -1.0f,       1.0f,   0.0f,   1.0f,   1.0f,	   -1.0f,    0.0f,    0.0f,       0.0f,   0.0f,  // нижний левый
	   -1.0f,  -1.0f,   1.0f,       0.5f,   0.5f,   0.5f,   1.0f,	   -1.0f,    0.0f,    0.0f,       1.0f,   0.0f,  // нижний правый
	// Нижняя грань (y: -1)											    
		1.0f,  -1.0f,   1.0f,       1.0f,   1.0f,   1.0f,   1.0f,	    0.0f,   -1.0f,    0.0f,       1.0f,   1.0f,  // верхний правый
	   -1.0f,  -1.0f,   1.0f,       0.0f,   1.0f,   1.0f,   1.0f,	    0.0f,   -1.0f,    0.0f,       0.0f,   1.0f,  // верхний левый
	   -1.0f,  -1.0f,  -1.0f,       1.0f,   0.0f,   1.0f,   1.0f,	    0.0f,   -1.0f,    0.0f,       0.0f,   0.0f,  // нижний левый
		1.0f,  -1.0f,  -1.0f,       0.5f,   0.5f,   0.5f,   1.0f,	    0.0f,   -1.0f,    0.0f,       1.0f,   0.0f,  // нижний правый
	// Задняя грань (z: -1)											   
	   -1.0f,   1.0f,  -1.0f,       1.0f,   1.0f,   1.0f,   1.0f,	    0.0f,    0.0f,   -1.0f,       1.0f,   1.0f,  // верхний правый
		1.0f,   1.0f,  -1.0f,       0.0f,   1.0f,   1.0f,   1.0f,	    0.0f,    0.0f,   -1.0f,       0.0f,   1.0f,  // верхний левый
		1.0f,  -1.0f,  -1.0f,       1.0f,   0.0f,   1.0f,   1.0f,	    0.0f,    0.0f,   -1.0f,       0.0f,   0.0f,  // нижний левый
	   -1.0f,  -1.0f,  -1.0f,       0.5f,   0.5f,   0.5f,   1.0f,	    0.0f,    0.0f,   -1.0f,       1.0f,   0.0f,  // нижний правый
};

static unsigned cubeIndices[] = {
		// Одна грань - 2 треугольника - 6 точек
		 0, 1, 2,	 0, 2, 3,
		 4, 5, 6,	 4, 6, 7,
		 8, 9,10,	 8,10,11,
		12,13,14,	12,14,15,
	    16,17,18,	16,18,19,
		20,21,22,	20,22,23,
	};

class Cube: public MaterialWorldObject
{
public:
	Cube(const Shader* shader, Material* material,
		const float pos_x = 0, const float pos_y = 0, const float pos_z = 0,
		const float scale_x = 1, const float scale_y = 1, const float scale_z = 1)
			:MaterialWorldObject(shader, material, pos_x, pos_y, pos_z, scale_x, scale_y, scale_z)
	{	
		mesh_ = new Mesh(12 * 4 * 6,cube_mesh, 3 * 2 * 6, cubeIndices, &pos_color_normal_texture_VDC);
	}
	
	virtual ~Cube()
	{
	};
};
